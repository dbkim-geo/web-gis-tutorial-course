REFERENCE - https://neiugis.github.io/lab1/

::1:: SECTION 01 - BASEMAP WITH LEAFLET
1. 목표
    ㅁ 이쁜 지도를 만들기 위하여 유명한 JS 라이브러리인 Leaflet(https://leafletjs.com)을 사용할 수 있다.
    ㅁ 적절한 지리적 공간과 스케일을 세팅하는 방법에 대하여 학습할 수 있다.
    ㅁ 베이스맵으로 타일 레이러를 추가할 수 있다.

2. 준비
    ㅁ 지도를 웹에다가 표출할 것이므로, HTML 문서를 준비한다.
        - text editor(메모장, notepad, vi ...) 혹은 IDE(VScode ...)에 작업한다.
        - "map1.html" 의 이름으로 저장한다.
    ㅁ Leaflet CSS와 Javascript를 불러온다. 여기서는 CSS와 JS 파일을 설치하는 것이 아니라, 링크로 불러올 것이다.
        - head section 안에, title 라인 바로 밑에다가 CSS link를 불러온다.
        - head section 안에, CSS 라인 밑에다가 JS link를 불러온다.
    ㅁ 여기까지 했으면, "map1.html"의 파일은 텅 빈 채로 있을 것이다.

3. 지도 제작 시작
    ㅁ 지도를 세팅할 준비를 해보자.
        - body 섹션 안에 div 요소를 추가하자. div 태그 안에 mymap이라는 id를 만들고 간단한 스타일을 줘보자.
        - body 섹션 안에 div 요소 "뒤에" JS에 대한 섹션을 추가하자.
        - 이제 지도를 시작해 볼 것인데, Leaflet의 L.map() 함수를 사용해보자. 예시로 서울특별시를 대상으로 불러와보자.
        - 중심점 좌표는 google map의 url을 보고 맞춘 것이다.
        - zoom 레벨도 내가 보기 편하게 조정한 것이다.



::2:: SECTION 02 - MARKERS AND bindPopup
1. 목표
    ㅁ Leaflet 함수를 이용해서 지도에 마크와 팝업을 추가할 수 있다. 
    ㅁ 마크의 이미지를 커스터마이징할 수 있다.

2. 베이스맵 셋업
    ㅁ 지난 시간에 사용했던 HTML 파일을 복사해서 가져와 수정해보자.
        - 파일 명은 "map2.html" 로 수정하자.
        - title 명도 헷갈리니 나는 "Section 02"로 바꿨다.
        - 타일 레이어를 오픈스트리트맵(OSM, OpenStreetMap)으로 바꿔보자.
            : 다양하게 해보려면, Staemen, MapBox, OSM을 막 사용해보자.
        - 예시에는 중심점을 공주대학교로 바꾸었다.
        - maxZoom과 minZoom을 동일하게 한다면, 줌 레벨을 "고정"시킬 수 있는 잡기술이 있다.

3. 마크 추가
    ㅁ 베이스맵 셋업을 했으니, 이제 지도에 잡다한 것들을 올릴 준비가 되었다.
        - 마크를 공주대학교에 찍어보자. 지도에 마크를 올리기 위해서 Leaflet의 L.marker함수를 사용한다.
        - 중요한 점은 script 섹션에서 타일 레이어 파트 "뒤에" 넣어야 한다.
        - 나는 마크를 2개를 찍었다.
4. 팝업 추가
    ㅁ 팝업은 지도에 특정한 객체에 정보를 올릴 때, 종종 사용된다. Leaflet의 bindPopup 방법을 사용해보자.
        - 팝업을 띄울 텍스트를 알아서 작성한다.
        - 앞서 추가한 마크에다가 팝업을 추가하였다.
        - 마크를 클릭하여 팝업을 확인해본다.
    ㅁ 팝업에 사진도 추가할 수 있다.
    ㅁ 팝업에 텍스트와 사진을 동시에 추가할 수 있다.
        - 텍스트의 폰트 설정도 해보자.

5. 마크 커스터마이징
    ㅁ Leaflet에서는 파란색 로케이터 아이콘이 기본 값이다. 심심하니깐 아이콘을 커스터마이징 해보자.
        - 나는 대학교 이미지를 https://www.flaticon.com 에서 다운받았다.
        - 다운받은 파일에 대한 파일경로를 잡기가 힘들다면, 그냥 HTML 파일과 일단 같은 폴더에 두자.
    ㅁ 중요한 점은, L.marker 함수 바로 "직전"에 넣어야 한다는 것이다.
    ㅁ 추가로, L.marker에 소스를 추가하자.



::3:: SECTION 03 - INTERACTIVE CHOROPLETH MAP
1. 목표
    ㅁ GeoJSON 데이터를 사용하여 단계구분도를 제작할 수 있다.
    ㅁ 마우스오버 효과를 추가하고, 팝업/툴팁과 같은 정보를 표출할 수 있다.
    ㅁ 개인적으로 취득한 데이터를 활용하여 웹에 표출할 수 있다.

2. 베이스맵 셋업
    ㅁ HTML 파일을 가져와 베이스맵을 세팅해보자.
        - 파일 명은 "map3.html" 로 세팅하자.
        - 이번에는 Carto 타일 레이어를 사용해보자.
            : 이외에도 다양한 타일 레이어를 사용하고 싶다면, https://wiki.openstreetmap.org/wiki/Tile_servers 에서 확인해보자.

3. GeoJSON 레이어 준비 및 추가
    ㅁ GeoJSON 레이어를 추가하기 위하여, 파일을 구득하여보자.
        - 공간정보와 속성정보가 있는 데이터(일단은 가볍게 shp로)를 다운받자.
            : 여기서는 RCP 8.5 시나리오에서 2100년의 남한 시군구 단위의 자료를 가져왔다.
        - QGIS를 사용해서 해당 데이터를 확인하며 심볼 조정으로 단계구분도의 기준 값을 잡아보자.
        - 기준 값들을 확인하였으면, 이제 다른 이름으로 저장하여 파일 포맷을 GeoJSON으로 저장하자.
    ㅁ GeoJSON 파일을 JS에 담아보자.
        - notepad와 같은 텍스트 편집기로 GeoJSON 파일을 열어보자.
        - "data.js" 라는 JS 파일을 만들고, "var data =" 뒤에 GeoJSON 안의 내용을 복사 및 붙여넣기 하자.
        - HTML 로 돌아와, head 섹션 안에 JS 경로를 추가하자.
        - body 안의 script 섹션에 (타일 레이어 뒤에!) 저장한 GeoJSON 레이어를 추가하자.

4. 색 조정
    ㅁ 속성 값을 기준으로 색을 정해보자.
        - 웹에다가 GeoJSON을 올리는 것을 성공했으니, 이제 feature 마다 색을 다르게 정해보자.
            : 여기서 사용된 GeoJSON의 컬럼명은 다음과 같다.
            : adminNam(시군구 한글명), Tmax(최고기온), Tmin(최저기온), Tavg(평균기온), HWD(폭염일수), TND(열대야일수), CWD(한파일수)
        - 단계구분도 제작을 위해서 QGIS에서 확인한 속성 값 기준으로 색상을 부여해보자.
        - 색상은 개인취향인데 나는 https://colorbrewer2.org/ 여기서 많이 참고한다.
    ㅁ JS 함수를 사용하여 표출 해보자.
        - 위에서 추가했던 GeoJson 레이어를 추가한 소스 위에 함수를 추가한다.
        - 조건문으로 속성에 따라 색상을 다르게 하였다.
        - 스타일도 추가해보았다.

5. 범례 추가
    ㅁ 단계구분도를 위하여 속성에 따라 색을 다르게 지정하고, 스타일도 수정하였으니 이제 범례를 추가해보자.
        - HTML의 head 섹션에 범례를 정의하는 소스를 추가해보자.
        - body의 script 섹션에 (GeoJSON 레이어 뒤에) 범례를 추가해보자.

6. 마우스 효과 추가
    ㅁ 마우스를 해당 feature에 올리면 강조 혹은 삭제되는 효과를 추가해보자.
        - JS에서 geoJson 레이어 전에 소스를 넣자.
    ㅁ geoJson 레이어 소스를 수정한다.

7. 툴팁 추가
    ㅁ SECTION2에서 사용했던 bindPopup 방식을 사용해보자.
        -geoJson 레이어 소스를 수정한다.
            : 필드 명에 유의하자.
